import java.util.*;
import java.io.*;

public class Sorting {
	
	public static List<double[]> arr=new ArrayList<double[]>();
	
	public static void swap(int b,int d,int col) {
		double temp=arr.get(b)[col];
		arr.get(b)[col]=arr.get(d)[col];
		arr.get(d)[col]=temp;
	}
	
	public static void qsort(int l,int r,int column) {
		int i=l;
		int j=r;
		int m=l+(r-l)/2;
		while(i<=j) {
			while(arr.get(i)[column]<arr.get(m)[column])
				i++;
			while(arr.get(j)[column]>arr.get(m)[column])
				j--;
		   if(i<=j) {
			   swap(i,j,column);
			   i++;
			   j--;
		   }
		}
		if(i<r) qsort(i,r,column);
		if(j>l) qsort(l,j,column);
	}
	
	public static boolean is_ok(String s) {
if(s.length()==5&&s.charAt(0)<='2'&&s.charAt(1)<='3'&&s.charAt(2)=='.'&&s.charAt(3)<='5'&&s.charAt(4)<='9') return true;
if(s.length()==4&&s.charAt(0)<='9'&&s.charAt(1)=='.'&&s.charAt(2)<='5'&&s.charAt(3)<='9') return true;
if(s.length()==1) return true;
return false;
		
	}

	public static void main(String [] args)  throws IOException {
		Scanner in=new Scanner(new FileReader("input.txt"));
		PrintWriter out=new PrintWriter(new FileWriter("output.txt"));
		String[] array;
		double[] temp;
		ArrayList<Integer> fine=new ArrayList<Integer>();
		int leng=0;
		while(in.hasNextLine()) {
			array=in.nextLine().split(",");
			leng=array.length;
			temp=new double[array.length];
			for(int i=0;i<array.length;i++)
				temp[i]=Double.parseDouble(array[i]);
			  arr.add(temp);
		} 
		for(int i=0;i<leng;i++)
			qsort(0,arr.size()-1,i);
		for(int i=0;i<arr.size();i++) {
			for(int j=0;j<leng;j++)
				out.print(arr.get(i)[j]+" ");
		out.println();
	}
		for(int i=0;i<leng;i++) {
			double diff=arr.get(1)[i]-arr.get(0)[i];
			if(!is_ok(String.valueOf(arr.get(0)[i]))|!is_ok(String.valueOf(arr.get(1)[i]))) {
				fine.add(i);
				continue;
			}
			for(int j=2;j<arr.size();j++)
				 if(arr.get(j)[i]-arr.get(j-1)[i]!=diff|!is_ok(String.valueOf(arr.get(j)[i])))
					 fine.add(i);
		}
		int start=0;
		while(fine.contains(start))
			start++;
		out.print(start);
		out.print(String.valueOf(1.22));
		out.close();
	}
}
